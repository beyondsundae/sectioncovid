{"version":3,"sources":["Components/SVG/virus icon.svg","logo.svg","Components/SVG/virus.svg","Components/SVG/virus-main.svg","Components/Navbar.js","Components/Main.js","Components/Content.js","Components/Hommie.js","Pages/Home.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navbar","className","href","style","width","marginLeft","src","virus","activeClass","class","spy","smooth","offset","duration","isDynamic","Main","Style","PaddingTop","height","AreaContent","useState","Infected","setInfected","GetDataCovid","a","axios","get","then","res","Result","data","Confirmed","catch","err","console","log","message","useEffect","id","paddingTop","Content","Hommie","props","Paddingtop","AreaFooter","color","bottom","fontWeight","textAlign","updateDate","target","alt","borderRadius","paddingLeft","Home","Data","setData","options","sectionClassName","anchors","delay","navigation","verticalAlign","Getdata","LastUpdate","UpdateDate","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","basename","process","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.ffaef568.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/virus icon.3ab1e1b8.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/virus.283be8c5.svg\";","module.exports = __webpack_public_path__ + \"static/media/virus-main.cd89a91c.svg\";","import React from 'react'\nimport { Link, animateScroll as scroll } from \"react-scroll\";\nimport virus from \"./SVG/virus icon.svg\"\n\nfunction Navbar() {\n    return (\n        <div>\n            \n            <nav className=\"navbar pt-4\">\n            <ul className=\"xx\" >\n                            <a href=\"/\">\n                                <img href=\"/\" style={{width: \"65%\", marginLeft: \"50%\"}} src={virus}/>\n    \n                            </a>\n                        </ul>\n                <ul className=\"nav-items\">\n                    \n\n                    <li className=\"nav-item\">\n                        <a\n                            activeClass=\"active\"\n                            class=\"active\"\n                            href=\"#sectionOne\"\n                            spy={true}\n                            smooth={true}\n                            offset={0}\n                            duration= {500}\n                            isDynamic={true}\n                        >Hommie</a>\n                    </li>\n                    <li className=\"nav-item\">\n                        <a\n                            activeClass=\"active\"\n                            href=\"#sectionTwo\"\n                            spy={true}\n                            smooth={true}\n                            offset={0}\n                            duration= {500}\n                            isDynamic={true}\n                        >Main</a>\n                    </li>\n                    <li className=\"nav-item\">\n                        <a\n                            activeClass=\"active\"\n                            href=\"#sectionThree\"\n                            spy={true}\n                            smooth={true}\n                            offset={0}\n                            duration= {500}\n                        >Content</a>\n                    </li>\n                    <li className=\"nav-item\">\n                        <Link\n                            activeClass=\"active\"\n                            href=\"#sectionFour\"\n                            spy={true}\n                            smooth={true}\n                            offset={0}\n                            duration= {500}\n                        >Content2</Link>\n                    </li>\n                    \n                    {/* <li className=\"btn btn-primary\" onClick={()=>{scroll.scrollToTop()}}>to top</li> */}\n                </ul>\n        </nav>\n        </div>\n    )\n}\n\nexport default Navbar\n","import React, { useEffect, useState } from 'react'\nimport axios from 'axios'\nimport Container from '@material-ui/core/Container';\n\nfunction Main() {\n    const Style = ({ \n        PaddingTop:{ \n            height: \"5vh\",\n            \n        },\n        AreaContent:{\n            height: \"90vh\",\n            \n        }\n    })\n    \n    const [ Infected, setInfected ] = useState()\n    const [ NewInfected, setNewInfected ] = useState()\n    const [ Recovered, setRecovered ] = useState()\n    const [ NewRecovered, setNewRecovered ] = useState()\n    const [ Hospitalized, setNewHospitalized ] = useState()\n    const [ Deaths, setDeaths ] = useState()\n    const [ NewDeaths, setNewDeaths ] = useState()\n    const [ UpdateDate, setUpdateDate] = useState()\n  \n\n\n    const GetDataCovid = async ()=>{\n        await axios.get( 'https://covid19.th-stat.com/api/open/today' )\n        .then ( (res) =>{\n            const Result = res.data\n            // console.table( Result )\n            setInfected( Result.Confirmed )\n        })\n        .catch ( (err) =>{\n            console.log( err.message) \n        } )\n    }\n\n\n    useEffect(()=>{\n        GetDataCovid()\n    }, [])\n\n    return (\n        <div className='main' id='main'>\n            <div className='container-fluid' style={ Style.PaddingTop }/>\n               \n            <div className='container-fluid' style={ Style.AreaContent }>\n                <div className='row mt-5' style={{paddingTop: \"20vh\"}}>\n                    <div className='p-5 col text-center border border-success'>\n                        <div className=\"display-3\" id=\"ValueCovid\">\n                            { Infected }\n                        </div>\n                    </div>\n                    <div className='col text-center border border-success '>\n                        xx\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Main\n","import React from 'react'\n\nfunction Content() {\n    return (\n        <div className='content' id='content'>\n            xxxx\n        </div>\n    )\n}\n\nexport default Content\n","import React from 'react'\nimport virus from \"./SVG/virus.svg\"\nimport virusMain from \"./SVG/virus-main.svg\"\nimport zIndex from '@material-ui/core/styles/zIndex'\n\nfunction Hommie( props ) {\n    const Style =({\n        \n\n        Paddingtop:{\n            height: \"5vh\"\n        },\n        \n        AreaContent:{\n            height: \"88vh\",\n        },\n\n        AreaFooter:{\n            height: \"5vh\",\n            color: \"white\",\n            bottom: \"0\",\n            fontWeight: \"bold\",\n            \n           \n        }\n        \n    })\n    // border border-danger\"\n    return (\n        <div className=\"hommie\" id=\"hommie\" >\n            <div className=\"container-fluid \" style={ Style.Paddingtop }/>\n\n            <div className='container-fluid' style={ Style.AreaContent }>\n                <div className=\"row mt-5\" style={{paddingTop: \"20vh\"}}>\n                    {/* <div className=\"row border border-danger\"> */}\n                    <div className=\"col-1 text-left \">\n                        {/* <img style={{width: \"100%%\"}} src={virusMain}/> */}\n                    </div>\n                    {/* </div> */}\n\n                    <div className=\"VerticalLine\"/>\n\n                    <div className=\"col  pt-5\">\n                        <div className=\"pt-5\" style={{color:'white'}}>\n                            <div className=\"Textcovid\" style={{textAlign: \"left\"}}>Covid-19</div>\n                            <div className=\"TextSituation\" style={{textAlign: \"left\"}}>Thailand Situation</div>\n                            <p className=\"TextUpdate\" style={{textAlign: \"left\"}}>Last update: { props.updateDate }</p>\n                        </div>\n                    </div>\n\n                </div>\n\n                <div className=\"FooterMe row pl-5\" >\n                    By  <a target=\"_blank\" href=\"https://github.com/beyondsundae\">\n                            <img \n                                src=\"https://avatars2.githubusercontent.com/u/59742129?s=60&v=4\" \n                                alt=\"Beyondsundae\"\n                                style={{ borderRadius: \"50%\", width: \"60%\" }}>\n\n                            </img>\n                        </a>\n                    and API from <a target=\"_blank\" href=\"https://covid19.th-stat.com/api/open/today\">\n                                <img   \n                                    src=\"https://covid19.th-stat.com/img/covid_19/logo_kid.png\"\n                                    alt=\"API\"\n                                    style={{ height: \"32px\", paddingLeft: \"15px\"}}>\n                                    \n                                </img>\n                            </a>\n                </div>\n            </div>\n            \n        </div>\n    )\n}\n\nexport default Hommie\n","import React, {useEffect, useState} from 'react'\nimport axios from 'axios'\nimport ReactPageScroller from \"react-page-scroller\";\nimport ReactFullpage from '@fullpage/react-fullpage';\nimport {ScrollToTopOnMount, SectionsContainer, Section, Header, Footer} from 'react-fullpage';\n\nimport Navbar from '../Components/Navbar';\nimport Main from '../Components/Main';\nimport Content from '../Components/Content'\nimport Content2 from '../Components/Content2'\nimport Hommie from '../Components/Hommie';\nimport { Link } from 'react-router-dom';\n\nfunction Home() {\n\n    const [ Data, setData ] = useState();\n    const anchors = [\"firstPage\", \"secondPage\"];\n   \n    let options = {\n        activeClass:          'active',\n        sectionClassName:     'section',\n        anchors:              ['sectionOne', 'sectionTwo', 'sectionThree'],\n        delay:                500,\n        navigation:           true,\n        verticalAlign:        false,\n        // scrollBar:            true,\n      };\n\n    const Getdata = async () => {\n        await axios.get( 'https://covid19.th-stat.com/api/open/today' )\n        .then ( ( res ) => {\n            const data = res.data\n            const LastUpdate =  data.UpdateDate\n            setData(LastUpdate)\n        })\n\n        .catch ( (err) =>{\n            console.log( err.message) \n        } )\n    }\n\n    useEffect (()=>{\n        Getdata()\n    }, [])\n    \n    return (\n        <div>\n            \n            {/* <ReactPageScroller\n            animationTimer={600}>\n                <Hommie updateDate ={ Data }/>\n                <Main/>\n                <Content/>\n                <Content2/>\n            </ReactPageScroller>\n            <Navbar/> */}\n\n        {/* <ReactFullpage\n        anchors={anchors}\n        navigationTooltips={anchors}\n        navigation\n        // fullpage options\n        scrollingSpeed = {700} \n        sectionsColor={[\"#282c34\", \"#ff5f45\", \"#0798ec\"]}\n        render={({ state, fullpageApi }) => {\n        return (\n            <ReactFullpage.Wrapper>\n            <div className=\"section\">\n                <p>Section 1 (welcome to fullpage.js)</p>\n                <button><a href=\"#secondPage\">xxxx</a></button>\n                \n            </div>\n            <div className=\"section\">\n                <p>Section 2</p>\n            </div>\n            </ReactFullpage.Wrapper>\n        );\n        }}\n    /> */}\n            \n            {/* <Header className='test'>\n                <a href=\"#sectionOne\" >Section One</a>\n                <a href=\"#sectionTwo\" >Section Two</a>\n                <a href=\"/\" >Section Three</a>\n            </Header> */}\n            {/* <Footer >\n                <a href=\"\">Dcoumentation</a>\n                <a href=\"\">Example Source</a>\n                <a href=\"\">About</a>\n            </Footer> */}\n\n           \n            \n            <SectionsContainer  {...options}>\n                <Section><Hommie updateDate ={ Data }/></Section>\n                <Section><Main/></Section>\n                <Section><Content/></Section>\n            </SectionsContainer>\n            <Navbar/>\n\n            {/* <Header>\n            <a href=\"#sectionOne\">Section One</a>\n            <a href=\"#sectionTwo\">Section Two</a>\n            <a href=\"/\">Section Three</a>\n            </Header>\n            <Footer>\n            <a href=\"\">Dcoumentation</a>\n            <a href=\"\">Example Source</a>\n            <a href=\"\">About</a>\n            </Footer>\n            <SectionsContainer className=\"container\" {...options}>\n            <Section color=\"#69D2E7\">Page 1</Section>\n            <Section color=\"#A7DBD8\">Page 2</Section>\n            <Section color=\"#E0E4CC\">Page 3</Section>\n            </SectionsContainer> */}\n        </div>\n    )\n}\n\nexport default Home\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport { BrowserRouter as HashRouter, Router, Route, Switch } from 'react-router-dom';\n\nimport Home from './Pages/Home'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Switch>\n          <Route exact path=\"/\" component={Home} />\n          {/* <Route exact path=\"/HomeLong\" component={HomeLong} />\n          <Route exact path=\"/NewCase\" component={NewCase} />\n          <Route exact path=\"/About\" component={About} />\n          <Route component={NotFoundPage} /> */}\n        </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}